# Response-Based Throttling is a plugin that helps reduce the cooldown period 
# a service must endure after reaching the rate limit set by the API provider.

# With Response-Based Throttling, Lunar determines whether to forward the API call
# to the actual API provider or return a 429 response generated by the proxy. 
# This decision is based on the retry-after value, which indicates the duration 
# the service needs to wait before making another request.

---
global:
  remedies:
    - name: Global Throttling Management
      enabled: false
      config:
        response_based_throttling:
          retry_after_header: Retry-After #  Name of the response header indicating when to retry the request
          retry_after_type: relative_seconds # One of: relative_seconds or absolute_epoch
          quota_group: 1 # Remedies with the same quota group will share the same quota
          relevant_statuses:
            - 429 # Status codes which trigger this remedy.

# The Diagnosis plugin below, exposes Lunar's metrics to Prometheus
# Which are used by the Grafana's dashboard you see on your right. 
  diagnosis:
    - name: Metrics Collector - Response Based Throttling
      enabled: true
      config:
        metrics_collector:
          counters:
            - name_suffix: "Retry-After"
              payload: "response_headers"
              key: "Retry-After"
          response_header_names:
            - X-Lunar-Generated
      export: "prometheus"

exporters:
  prometheus: {}
